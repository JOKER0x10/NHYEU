import requests
from bs4 import BeautifulSoup
import os
from urllib.parse import urljoin    
from colorama import Fore, Style
class NHYE:
    def __init__(self, url):
        self.url = url
        self.response = requests.get(f"https://{self.url}", timeout=50)
        self.soup = BeautifulSoup(self.response.text, 'html.parser')
        self.links = self.soup.find_all()
        self.all_links = set()
        #self.get_all_url()
        ...
        
    def get_all_url(self):
        tags_attrs = [
        ("a", "href"),
        ("link", "href"),
        ("img", "src"),
        ("script", "src"),
        ("iframe", "src"),
        ("form", "action")]
        if self.url.startswith(('http://', 'https://', "/")):
            self.url = url
        else:
        
            for tag, attr in tags_attrs:
                for t in self.soup.find_all(tag):
                    self.link = t.get(attr)
                    if self.link:
                        full_link = urljoin(f"https://{self.url}", self.link)
                        self.all_links.add(full_link)
            url = f"https://web.archive.org/cdx/search/cdx?url=*.{self.url}/*&output=json&fl=original&collapse=urlkey"
            res = requests.get(url, timeout=50) 
            if res.status_code == 200:
                data = res.json()

                urls = [item[0] for item in data[1:]] if len(data) > 1 else []    
                for url in urls:
                    self.all_links.add(url)
        
    def get_all_link_file(self):

        print(f"{Fore.RED}---------------------------files URL ----------------------------------")
        ex_ = (".xls", ".xml", ".xlsx", ".zip", ".pptx", ".docx", ".sql",".doc", ".PDF", ".pdf", ".json", ".txt", ".csv", ".log", ".conf", ".config", ".cfg", ".ini", ".yml", ".yaml", ".tar", ".gz", ".tgz", ".bak", ".7z", ".rar", ".cache", ".secret", ".db", ".backup", ".md", ".md5", ".exe", ".dll", ".bin", ".bat", ".sh", ".tar", ".deb", ".rpm", ".iso", ".img", ".msi", ".dmg", ".tmp", ".crt", ".pem", ".key", ".pub", ".asc")
        current_path = os.getcwd()
        file_path = os.path.join(current_path, "all_urls.txt")
        x = 0
        file_url = os.path.join(current_path, "file_url.txt")
   
        with open(file_path, "r", encoding="utf-8") as file_url_:
            for link in file_url_.readlines():
                link = link.strip()
                if link.lower().endswith(ex_):
                    x += 1
                    with open(file_url, "a", encoding="utf-8") as file:
                        print(f"ðŸ”¥: {x} {Fore.GREEN}{link}")
                        file.write(f"{link}\n")             



    def get_all_link_js(self):
        print(f"{Fore.RED}---------------------------js URL----------------------------------")
        current_path = os.getcwd()
        file_path = os.path.join(current_path, "all_urls.txt")
        js_url = os.path.join(current_path, "js_url.txt")
        x = 0
        with open(file_path, "r", encoding="utf-8") as file_url_:
            for link in file_url_.readlines():
                link = link.strip()
                if link.lower().endswith(".js"):
                    x += 1
                    with open(js_url, "a", encoding="utf-8") as js_file:
                        print(f"ðŸ”¥: {x} {Fore.GREEN}{link}")
                        js_file.write(f"{link}\n")
               
    def get_all_link_params(self):
        print(f"{Fore.RED}---------------------------params URL----------------------------------")
        current_path = os.getcwd()
        file_path = os.path.join(current_path, "all_urls.txt")
        params_url = os.path.join(current_path, "params_url.txt")   
        x = 0
        with open(file_path, "r", encoding="utf-8") as file_url_:
            for link in file_url_.readlines():
                link = link.strip()
                if "?" in link:
                    x += 1
                    with open(params_url, "a", encoding="utf-8") as params_file:
                        print(f"ðŸ”¥: {x} {Fore.GREEN}{link}")
                        params_file.write(f"{link}\n")              
    def save_urls(self):
        current_path = os.getcwd()
        file_path = os.path.join(current_path, "all_urls.txt")
        ex_ = (".png", ".jpeg", ".jpg", ".gif", ".svg", ".ico", ".css",".ttf", ".woff", ".woff2", ".eot", ".otf", ".map")
        x = 0
        with open(file_path, "a", encoding="utf-8") as file:
            for link in self.all_links:
                x += 1
                link = link.strip()
                if not link.lower().endswith(ex_):
                    print(f"ðŸ”¥:{x} {link}")
                    file.write(f"{link}\n")
              
        #os.system("cat all_urls.txt | httpx -mc 200 > all_urls_200.txt")    
        

if __name__ == "__main__":
    run = NHYE("ybrdye.com")
    run.get_all_link_file()

    